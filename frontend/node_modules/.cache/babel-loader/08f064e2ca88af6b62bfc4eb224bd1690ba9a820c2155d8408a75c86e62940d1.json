{"ast":null,"code":"var _jsxFileName = \"D:\\\\py\\\\frontend\\\\src\\\\pages\\\\SubscriptionPlansPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, Card, CardContent, Typography, Button, List, ListItem, ListItemIcon, ListItemText, Chip, Alert, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress } from '@mui/material';\nimport { Check, Star, TrendingUp, Diamond } from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscriptionPlansPage = () => {\n  _s();\n  var _user$subscription_pl;\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [plans, setPlans] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [upgradeDialogOpen, setUpgradeDialogOpen] = useState(false);\n  const [processingPayment, setProcessingPayment] = useState(false);\n  useEffect(() => {\n    fetchSubscriptionPlans();\n  }, []);\n  const fetchSubscriptionPlans = async () => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      // Mock data for now\n      const mockPlans = [{\n        id: 'basic',\n        name: 'Basic Plan',\n        price: 49,\n        billing_period: 'monthly',\n        features: ['Up to 10 property listings', 'Standard visibility', 'Basic lead access', 'Email support', 'Mobile app access'],\n        limits: {\n          listings: 10,\n          featured_listings: 0,\n          analytics: false,\n          video_tours: false,\n          banner_ads: false,\n          priority_support: false\n        },\n        current: (user === null || user === void 0 ? void 0 : user.subscription_plan) === 'basic'\n      }, {\n        id: 'pro',\n        name: 'Pro Plan',\n        price: 99,\n        billing_period: 'monthly',\n        features: ['Unlimited property listings', 'Featured listings (priority placement)', 'Advanced analytics (views, clicks, leads)', 'Access to verified buyer leads', 'Priority email support', 'Mobile app access', 'Lead management tools'],\n        limits: {\n          listings: -1,\n          // unlimited\n          featured_listings: 5,\n          analytics: true,\n          video_tours: false,\n          banner_ads: false,\n          priority_support: true\n        },\n        popular: true,\n        current: (user === null || user === void 0 ? void 0 : user.subscription_plan) === 'pro'\n      }, {\n        id: 'premium',\n        name: 'Premium Plan',\n        price: 199,\n        billing_period: 'monthly',\n        features: ['All Pro features', 'Banner placement on homepage', 'Exclusive leads (priority notifications)', 'Dedicated account manager', 'Custom branding options', 'API access', 'White-label solutions'],\n        limits: {\n          listings: -1,\n          // unlimited\n          featured_listings: -1,\n          // unlimited\n          analytics: true,\n          video_tours: true,\n          banner_ads: true,\n          priority_support: true\n        },\n        current: (user === null || user === void 0 ? void 0 : user.subscription_plan) === 'premium'\n      }];\n      setPlans(mockPlans);\n    } catch (err) {\n      setError('Failed to load subscription plans');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelectPlan = plan => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    if (plan.current) {\n      return; // Already on this plan\n    }\n    setSelectedPlan(plan);\n    setUpgradeDialogOpen(true);\n  };\n  const handleUpgrade = async () => {\n    if (!selectedPlan) return;\n    try {\n      setProcessingPayment(true);\n      // TODO: Integrate with Stripe/PayPal\n      // For now, just simulate the process\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // TODO: Call API to update subscription\n      setError('Payment integration coming soon! Please contact support to upgrade your plan.');\n      setUpgradeDialogOpen(false);\n    } catch (err) {\n      setError('Payment failed. Please try again.');\n    } finally {\n      setProcessingPayment(false);\n    }\n  };\n  const getPlanIcon = planId => {\n    switch (planId) {\n      case 'basic':\n        return /*#__PURE__*/_jsxDEV(Star, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 16\n        }, this);\n      case 'pro':\n        return /*#__PURE__*/_jsxDEV(TrendingUp, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 16\n        }, this);\n      case 'premium':\n        return /*#__PURE__*/_jsxDEV(Diamond, {\n          sx: {\n            color: 'gold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Star, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0\n    }).format(price);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2\n        },\n        children: \"Loading subscription plans...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Pricing Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 2\n        },\n        children: \"Unlock powerful features to grow your real estate business\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Current Plan: ${((_user$subscription_pl = user.subscription_plan) === null || _user$subscription_pl === void 0 ? void 0 : _user$subscription_pl.toUpperCase()) || 'FREE'}`,\n        color: \"primary\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justifyContent: \"center\",\n      children: plans.map((plan, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.3,\n            delay: index * 0.1\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              position: 'relative',\n              border: plan.popular ? '2px solid' : '1px solid',\n              borderColor: plan.popular ? 'secondary.main' : 'divider',\n              '&:hover': {\n                transform: 'translateY(-8px)',\n                boxShadow: 6\n              },\n              transition: 'all 0.3s ease-in-out'\n            },\n            children: [plan.popular && /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Most Popular\",\n              color: \"secondary\",\n              size: \"small\",\n              sx: {\n                position: 'absolute',\n                top: -10,\n                left: '50%',\n                transform: 'translateX(-50%)',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), plan.current && /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Current Plan\",\n              color: \"success\",\n              size: \"small\",\n              sx: {\n                position: 'absolute',\n                top: 16,\n                right: 16,\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1,\n                p: 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  mb: 3\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 2\n                  },\n                  children: getPlanIcon(plan.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  component: \"h2\",\n                  gutterBottom: true,\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: plan.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'baseline',\n                    justifyContent: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h3\",\n                    component: \"span\",\n                    sx: {\n                      fontWeight: 'bold',\n                      color: 'primary.main'\n                    },\n                    children: formatPrice(plan.price)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"span\",\n                    color: \"text.secondary\",\n                    sx: {\n                      ml: 1\n                    },\n                    children: \"/month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                sx: {\n                  mb: 3\n                },\n                children: plan.features.map((feature, featureIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  sx: {\n                    px: 0,\n                    py: 0.5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    sx: {\n                      minWidth: 32\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Check, {\n                      color: \"success\",\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: feature,\n                    primaryTypographyProps: {\n                      variant: 'body2'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this)]\n                }, featureIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 3,\n                  p: 2,\n                  backgroundColor: 'grey.50',\n                  borderRadius: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: \"Plan Limits:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: `${plan.limits.listings === -1 ? 'Unlimited' : plan.limits.listings} Listings`,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this), plan.limits.featured_listings !== undefined && /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: `${plan.limits.featured_listings === -1 ? 'Unlimited' : plan.limits.featured_listings} Featured`,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this), plan.limits.analytics && /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: \"Analytics\",\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 25\n                  }, this), plan.limits.video_tours && /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: \"Video Tours\",\n                    color: \"secondary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: plan.current ? \"outlined\" : plan.popular ? \"contained\" : \"outlined\",\n                color: plan.popular ? \"secondary\" : \"primary\",\n                size: \"large\",\n                disabled: plan.current,\n                onClick: () => handleSelectPlan(plan),\n                sx: {\n                  mt: 'auto'\n                },\n                children: plan.current ? 'Current Plan' : `Upgrade to ${plan.name}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, plan.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mt: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        paragraph: true,\n        children: \"All plans include a 14-day free trial. Cancel anytime.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [\"Need a custom solution? \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          size: \"small\",\n          children: \"Contact Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: upgradeDialogOpen,\n      onClose: () => setUpgradeDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Upgrade to \", selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: selectedPlan && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            paragraph: true,\n            children: [\"You're about to upgrade to the \", selectedPlan.name, \" for \", formatPrice(selectedPlan.price), \"/month.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            paragraph: true,\n            children: [\"Your new plan will be active immediately, and you'll be charged \", formatPrice(selectedPlan.price), \" today.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 2\n            },\n            children: \"Payment integration is coming soon! Please contact our support team to complete your upgrade.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setUpgradeDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpgrade,\n          disabled: processingPayment,\n          startIcon: processingPayment ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 44\n          }, this) : null,\n          children: processingPayment ? 'Processing...' : 'Upgrade Now'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscriptionPlansPage, \"Efg4CJxFRZ+y3eIhDXlxUkjzaks=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SubscriptionPlansPage;\nexport default SubscriptionPlansPage;\nvar _c;\n$RefreshReg$(_c, \"SubscriptionPlansPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Grid","Card","CardContent","Typography","Button","List","ListItem","ListItemIcon","ListItemText","Chip","Alert","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Check","Star","TrendingUp","Diamond","motion","useAuth","useNavigate","jsxDEV","_jsxDEV","SubscriptionPlansPage","_s","_user$subscription_pl","user","navigate","plans","setPlans","loading","setLoading","error","setError","selectedPlan","setSelectedPlan","upgradeDialogOpen","setUpgradeDialogOpen","processingPayment","setProcessingPayment","fetchSubscriptionPlans","mockPlans","id","name","price","billing_period","features","limits","listings","featured_listings","analytics","video_tours","banner_ads","priority_support","current","subscription_plan","popular","err","handleSelectPlan","plan","handleUpgrade","Promise","resolve","setTimeout","getPlanIcon","planId","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","formatPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","format","maxWidth","py","textAlign","children","mt","mb","variant","component","gutterBottom","fontWeight","label","toUpperCase","severity","onClose","container","spacing","justifyContent","map","index","item","xs","md","div","initial","opacity","y","animate","transition","duration","delay","height","display","flexDirection","position","border","borderColor","transform","boxShadow","size","top","left","zIndex","right","flexGrow","p","alignItems","ml","feature","featureIndex","px","minWidth","fontSize","primary","primaryTypographyProps","backgroundColor","borderRadius","flexWrap","gap","undefined","fullWidth","disabled","onClick","paragraph","open","startIcon","_c","$RefreshReg$"],"sources":["D:/py/frontend/src/pages/SubscriptionPlansPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Chip,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  CircularProgress,\n} from '@mui/material';\nimport {\n  Check,\n  Star,\n  TrendingUp,\n  Visibility,\n  Analytics,\n  VideoCall,\n  Campaign,\n  Diamond,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\ninterface SubscriptionPlan {\n  id: string;\n  name: string;\n  price: number;\n  billing_period: 'monthly' | 'yearly';\n  features: string[];\n  limits: {\n    listings?: number;\n    featured_listings?: number;\n    analytics?: boolean;\n    video_tours?: boolean;\n    banner_ads?: boolean;\n    priority_support?: boolean;\n  };\n  popular?: boolean;\n  current?: boolean;\n}\n\nconst SubscriptionPlansPage: React.FC = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [plans, setPlans] = useState<SubscriptionPlan[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedPlan, setSelectedPlan] = useState<SubscriptionPlan | null>(null);\n  const [upgradeDialogOpen, setUpgradeDialogOpen] = useState(false);\n  const [processingPayment, setProcessingPayment] = useState(false);\n\n  useEffect(() => {\n    fetchSubscriptionPlans();\n  }, []);\n\n  const fetchSubscriptionPlans = async () => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      // Mock data for now\n      const mockPlans: SubscriptionPlan[] = [\n        {\n          id: 'basic',\n          name: 'Basic Plan',\n          price: 49,\n          billing_period: 'monthly',\n          features: [\n            'Up to 10 property listings',\n            'Standard visibility',\n            'Basic lead access',\n            'Email support',\n            'Mobile app access'\n          ],\n          limits: {\n            listings: 10,\n            featured_listings: 0,\n            analytics: false,\n            video_tours: false,\n            banner_ads: false,\n            priority_support: false,\n          },\n          current: user?.subscription_plan === 'basic'\n        },\n        {\n          id: 'pro',\n          name: 'Pro Plan',\n          price: 99,\n          billing_period: 'monthly',\n          features: [\n            'Unlimited property listings',\n            'Featured listings (priority placement)',\n            'Advanced analytics (views, clicks, leads)',\n            'Access to verified buyer leads',\n            'Priority email support',\n            'Mobile app access',\n            'Lead management tools'\n          ],\n          limits: {\n            listings: -1, // unlimited\n            featured_listings: 5,\n            analytics: true,\n            video_tours: false,\n            banner_ads: false,\n            priority_support: true,\n          },\n          popular: true,\n          current: user?.subscription_plan === 'pro'\n        },\n        {\n          id: 'premium',\n          name: 'Premium Plan',\n          price: 199,\n          billing_period: 'monthly',\n          features: [\n            'All Pro features',\n            'Banner placement on homepage',\n            'Exclusive leads (priority notifications)',\n            'Dedicated account manager',\n            'Custom branding options',\n            'API access',\n            'White-label solutions'\n          ],\n          limits: {\n            listings: -1, // unlimited\n            featured_listings: -1, // unlimited\n            analytics: true,\n            video_tours: true,\n            banner_ads: true,\n            priority_support: true,\n          },\n          current: user?.subscription_plan === 'premium'\n        }\n      ];\n      \n      setPlans(mockPlans);\n    } catch (err: any) {\n      setError('Failed to load subscription plans');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelectPlan = (plan: SubscriptionPlan) => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    if (plan.current) {\n      return; // Already on this plan\n    }\n\n    setSelectedPlan(plan);\n    setUpgradeDialogOpen(true);\n  };\n\n  const handleUpgrade = async () => {\n    if (!selectedPlan) return;\n\n    try {\n      setProcessingPayment(true);\n      // TODO: Integrate with Stripe/PayPal\n      // For now, just simulate the process\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // TODO: Call API to update subscription\n      setError('Payment integration coming soon! Please contact support to upgrade your plan.');\n      setUpgradeDialogOpen(false);\n    } catch (err: any) {\n      setError('Payment failed. Please try again.');\n    } finally {\n      setProcessingPayment(false);\n    }\n  };\n\n  const getPlanIcon = (planId: string) => {\n    switch (planId) {\n      case 'basic':\n        return <Star color=\"primary\" />;\n      case 'pro':\n        return <TrendingUp color=\"secondary\" />;\n      case 'premium':\n        return <Diamond sx={{ color: 'gold' }} />;\n      default:\n        return <Star />;\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4, textAlign: 'center' }}>\n        <CircularProgress />\n        <Typography sx={{ mt: 2 }}>Loading subscription plans...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      {/* Header */}\n      <Box sx={{ textAlign: 'center', mb: 6 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          Pricing Plans\n        </Typography>\n        <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          Unlock powerful features to grow your real estate business\n        </Typography>\n        {user && (\n          <Chip\n            label={`Current Plan: ${user.subscription_plan?.toUpperCase() || 'FREE'}`}\n            color=\"primary\"\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n\n      {/* Error Alert */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Plans Grid */}\n      <Grid container spacing={4} justifyContent=\"center\">\n        {plans.map((plan, index) => (\n          <Grid item xs={12} md={4} key={plan.id}>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: index * 0.1 }}\n            >\n              <Card\n                sx={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  position: 'relative',\n                  border: plan.popular ? '2px solid' : '1px solid',\n                  borderColor: plan.popular ? 'secondary.main' : 'divider',\n                  '&:hover': {\n                    transform: 'translateY(-8px)',\n                    boxShadow: 6,\n                  },\n                  transition: 'all 0.3s ease-in-out',\n                }}\n              >\n                {/* Popular Badge */}\n                {plan.popular && (\n                  <Chip\n                    label=\"Most Popular\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    sx={{\n                      position: 'absolute',\n                      top: -10,\n                      left: '50%',\n                      transform: 'translateX(-50%)',\n                      zIndex: 1,\n                    }}\n                  />\n                )}\n\n                {/* Current Plan Badge */}\n                {plan.current && (\n                  <Chip\n                    label=\"Current Plan\"\n                    color=\"success\"\n                    size=\"small\"\n                    sx={{\n                      position: 'absolute',\n                      top: 16,\n                      right: 16,\n                      zIndex: 1,\n                    }}\n                  />\n                )}\n\n                <CardContent sx={{ flexGrow: 1, p: 4 }}>\n                  {/* Plan Header */}\n                  <Box sx={{ textAlign: 'center', mb: 3 }}>\n                    <Box sx={{ mb: 2 }}>\n                      {getPlanIcon(plan.id)}\n                    </Box>\n                    <Typography variant=\"h4\" component=\"h2\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                      {plan.name}\n                    </Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'baseline', justifyContent: 'center' }}>\n                      <Typography variant=\"h3\" component=\"span\" sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n                        {formatPrice(plan.price)}\n                      </Typography>\n                      <Typography variant=\"h6\" component=\"span\" color=\"text.secondary\" sx={{ ml: 1 }}>\n                        /month\n                      </Typography>\n                    </Box>\n                  </Box>\n\n                  {/* Features List */}\n                  <List sx={{ mb: 3 }}>\n                    {plan.features.map((feature, featureIndex) => (\n                      <ListItem key={featureIndex} sx={{ px: 0, py: 0.5 }}>\n                        <ListItemIcon sx={{ minWidth: 32 }}>\n                          <Check color=\"success\" fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={feature}\n                          primaryTypographyProps={{ variant: 'body2' }}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n\n                  {/* Plan Limits */}\n                  <Box sx={{ mb: 3, p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>\n                    <Typography variant=\"subtitle2\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                      Plan Limits:\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                      <Chip\n                        size=\"small\"\n                        label={`${plan.limits.listings === -1 ? 'Unlimited' : plan.limits.listings} Listings`}\n                        variant=\"outlined\"\n                      />\n                      {plan.limits.featured_listings !== undefined && (\n                        <Chip\n                          size=\"small\"\n                          label={`${plan.limits.featured_listings === -1 ? 'Unlimited' : plan.limits.featured_listings} Featured`}\n                          variant=\"outlined\"\n                        />\n                      )}\n                      {plan.limits.analytics && (\n                        <Chip size=\"small\" label=\"Analytics\" color=\"primary\" variant=\"outlined\" />\n                      )}\n                      {plan.limits.video_tours && (\n                        <Chip size=\"small\" label=\"Video Tours\" color=\"secondary\" variant=\"outlined\" />\n                      )}\n                    </Box>\n                  </Box>\n\n                  {/* Action Button */}\n                  <Button\n                    fullWidth\n                    variant={plan.current ? \"outlined\" : plan.popular ? \"contained\" : \"outlined\"}\n                    color={plan.popular ? \"secondary\" : \"primary\"}\n                    size=\"large\"\n                    disabled={plan.current}\n                    onClick={() => handleSelectPlan(plan)}\n                    sx={{ mt: 'auto' }}\n                  >\n                    {plan.current ? 'Current Plan' : `Upgrade to ${plan.name}`}\n                  </Button>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Additional Info */}\n      <Box sx={{ textAlign: 'center', mt: 6 }}>\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          All plans include a 14-day free trial. Cancel anytime.\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Need a custom solution? <Button variant=\"text\" size=\"small\">Contact Sales</Button>\n        </Typography>\n      </Box>\n\n      {/* Upgrade Dialog */}\n      <Dialog open={upgradeDialogOpen} onClose={() => setUpgradeDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          Upgrade to {selectedPlan?.name}\n        </DialogTitle>\n        <DialogContent>\n          {selectedPlan && (\n            <Box>\n              <Typography variant=\"body1\" paragraph>\n                You're about to upgrade to the {selectedPlan.name} for {formatPrice(selectedPlan.price)}/month.\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Your new plan will be active immediately, and you'll be charged {formatPrice(selectedPlan.price)} today.\n              </Typography>\n              <Alert severity=\"info\" sx={{ mt: 2 }}>\n                Payment integration is coming soon! Please contact our support team to complete your upgrade.\n              </Alert>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setUpgradeDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleUpgrade}\n            disabled={processingPayment}\n            startIcon={processingPayment ? <CircularProgress size={20} /> : null}\n          >\n            {processingPayment ? 'Processing...' : 'Upgrade Now'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default SubscriptionPlansPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}