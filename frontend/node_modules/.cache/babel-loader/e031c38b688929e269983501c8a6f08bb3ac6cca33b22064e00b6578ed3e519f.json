{"ast":null,"code":"var _jsxFileName = \"D:\\\\py\\\\frontend\\\\src\\\\pages\\\\MessagesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Container, Grid, Card, CardContent, Typography, List, ListItem, ListItemAvatar, ListItemText, Avatar, TextField, Button, IconButton, Badge, Alert, Chip } from '@mui/material';\nimport { Send, AttachFile, MoreVert, Home } from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesPage = () => {\n  _s();\n  var _selectedConversation2;\n  const {\n    user\n  } = useAuth();\n  const [searchParams] = useSearchParams();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [aiAnalysisLoading, setAiAnalysisLoading] = useState(false);\n  const [showAiSuggestions, setShowAiSuggestions] = useState(true);\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n  const [landAnalysisDialog, setLandAnalysisDialog] = useState(false);\n  const [currentAnalysis, setCurrentAnalysis] = useState(null);\n  const [enhancementData, setEnhancementData] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [actionMenuAnchor, setActionMenuAnchor] = useState(null);\n  useEffect(() => {\n    fetchConversations();\n\n    // Check if we need to start a new conversation\n    const agentId = searchParams.get('agent');\n    const propertyId = searchParams.get('property');\n    if (agentId && propertyId) {\n      // TODO: Start new conversation with agent about property\n    }\n  }, [searchParams]);\n  const fetchConversations = async () => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      // Mock data for now\n      const mockConversations = [{\n        id: 1,\n        participant: {\n          id: 2,\n          username: 'sarah_agent',\n          first_name: 'Sarah',\n          last_name: 'Johnson',\n          user_role: 'seller_agent',\n          company_name: 'Premier Realty',\n          avatar: '/api/placeholder/40/40'\n        },\n        property: {\n          id: 1,\n          title: 'Beautiful 3BR Home in Naperville',\n          price: 425000,\n          location: 'Naperville, IL'\n        },\n        last_message: {\n          id: 1,\n          content: 'Hi! I saw your interest in the Naperville property. Would you like to schedule a viewing?',\n          sender_id: 2,\n          receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n          property_id: 1,\n          created_at: '2024-01-15T14:30:00Z',\n          is_read: false\n        },\n        unread_count: 1\n      }, {\n        id: 2,\n        participant: {\n          id: 3,\n          username: 'mike_agent',\n          first_name: 'Mike',\n          last_name: 'Davis',\n          user_role: 'buyer_agent',\n          company_name: 'Urban Properties',\n          avatar: '/api/placeholder/40/40'\n        },\n        last_message: {\n          id: 2,\n          content: 'Thanks for the property details. My client is very interested.',\n          sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n          receiver_id: 3,\n          created_at: '2024-01-14T16:45:00Z',\n          is_read: true\n        },\n        unread_count: 0\n      }];\n      setConversations(mockConversations);\n      if (mockConversations.length > 0) {\n        setSelectedConversation(mockConversations[0]);\n        fetchMessages(mockConversations[0].id);\n      }\n    } catch (err) {\n      setError('Failed to load conversations');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchMessages = async conversationId => {\n    try {\n      // TODO: Replace with actual API call\n      // Mock messages for now\n      const mockMessages = [{\n        id: 1,\n        content: 'Hi! I saw your interest in the Naperville property. Would you like to schedule a viewing?',\n        sender_id: 2,\n        receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        property_id: 1,\n        created_at: '2024-01-15T14:30:00Z',\n        is_read: false\n      }, {\n        id: 2,\n        content: 'Yes, I\\'m very interested! When would be a good time?',\n        sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        receiver_id: 2,\n        property_id: 1,\n        created_at: '2024-01-15T14:35:00Z',\n        is_read: true\n      }, {\n        id: 3,\n        content: 'How about this Saturday at 2 PM? I can meet you at the property.',\n        sender_id: 2,\n        receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        property_id: 1,\n        created_at: '2024-01-15T14:40:00Z',\n        is_read: false\n      }];\n      setMessages(mockMessages);\n    } catch (err) {\n      setError('Failed to load messages');\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n    try {\n      var _selectedConversation;\n      // TODO: API call to send message\n      const newMsg = {\n        id: Date.now(),\n        content: newMessage,\n        sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        receiver_id: selectedConversation.participant.id,\n        property_id: (_selectedConversation = selectedConversation.property) === null || _selectedConversation === void 0 ? void 0 : _selectedConversation.id,\n        created_at: new Date().toISOString(),\n        is_read: false\n      };\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage('');\n    } catch (err) {\n      setError('Failed to send message');\n    }\n  };\n  const formatTime = dateString => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const getRoleColor = role => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'primary';\n      case 'seller_agent':\n        return 'secondary';\n      case 'buyer':\n        return 'info';\n      case 'seller':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  const getRoleLabel = role => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'Buyer Agent';\n      case 'seller_agent':\n        return 'Seller Agent';\n      case 'buyer':\n        return 'Buyer';\n      case 'seller':\n        return 'Seller';\n      default:\n        return role;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Communicate with agents and clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 3\n      },\n      children: [user.user_role === 'buyer' && 'As a buyer, you can contact seller agents directly. For other inquiries, work with your buyer agent.', user.user_role === 'seller' && 'As a seller, you can contact buyer agents through your seller agent. Direct communication helps streamline the process.', user.user_role === 'buyer_agent' && 'As a buyer agent, you can communicate with sellers and seller agents on behalf of your clients.', user.user_role === 'seller_agent' && 'As a seller agent, you can communicate with buyers and buyer agents on behalf of your clients.']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        height: 'calc(100vh - 300px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              pb: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto'\n            },\n            children: conversations.map(conversation => {\n              var _conversation$partici;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                selected: (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id,\n                onClick: () => {\n                  setSelectedConversation(conversation);\n                  fetchMessages(conversation.id);\n                },\n                sx: {\n                  borderRadius: 1,\n                  mx: 1,\n                  mb: 1,\n                  '&.Mui-selected': {\n                    backgroundColor: 'primary.light',\n                    '&:hover': {\n                      backgroundColor: 'primary.light'\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    badgeContent: conversation.unread_count,\n                    color: \"error\",\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      src: conversation.participant.avatar,\n                      children: ((_conversation$partici = conversation.participant.first_name) === null || _conversation$partici === void 0 ? void 0 : _conversation$partici.charAt(0)) || conversation.participant.username.charAt(0).toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: [conversation.participant.first_name, \" \", conversation.participant.last_name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: getRoleLabel(conversation.participant.user_role),\n                      color: getRoleColor(conversation.participant.user_role),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 23\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Box, {\n                    children: [conversation.participant.company_name && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: conversation.participant.company_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 27\n                    }, this), conversation.property && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 0.5,\n                        mt: 0.5\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Home, {\n                        fontSize: \"small\",\n                        color: \"action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 415,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        children: conversation.property.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        mt: 0.5\n                      },\n                      noWrap: true,\n                      children: conversation.last_message.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: formatDate(conversation.last_message.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this)]\n              }, conversation.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              pb: 1,\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: selectedConversation.participant.avatar,\n                  children: ((_selectedConversation2 = selectedConversation.participant.first_name) === null || _selectedConversation2 === void 0 ? void 0 : _selectedConversation2.charAt(0)) || selectedConversation.participant.username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: [selectedConversation.participant.first_name, \" \", selectedConversation.participant.last_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: getRoleLabel(selectedConversation.participant.user_role),\n                      color: getRoleColor(selectedConversation.participant.user_role),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 25\n                    }, this), selectedConversation.participant.company_name && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [\"\\u2022 \", selectedConversation.participant.company_name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), selectedConversation.property && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                p: 2,\n                backgroundColor: 'grey.50',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Home, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: selectedConversation.property.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"$\", selectedConversation.property.price.toLocaleString(), \" \\u2022 \", selectedConversation.property.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              p: 2\n            },\n            children: messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                duration: 0.2\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: message.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'flex-end' : 'flex-start',\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    maxWidth: '70%',\n                    p: 2,\n                    borderRadius: 2,\n                    backgroundColor: message.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'primary.main' : 'grey.100',\n                    color: message.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'white' : 'text.primary'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mt: 0.5,\n                      opacity: 0.8,\n                      textAlign: 'right'\n                    },\n                    children: formatTime(message.created_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 21\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                alignItems: 'flex-end'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                multiline: true,\n                maxRows: 3,\n                placeholder: \"Type your message...\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: e => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                endIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 30\n                }, this),\n                onClick: handleSendMessage,\n                disabled: !newMessage.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              children: \"Select a conversation to start messaging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesPage, \"r8UrS1OJzD0j5/teqL5vuNvBu7Q=\", false, function () {\n  return [useAuth, useSearchParams];\n});\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Container","Grid","Card","CardContent","Typography","List","ListItem","ListItemAvatar","ListItemText","Avatar","TextField","Button","IconButton","Badge","Alert","Chip","Send","AttachFile","MoreVert","Home","motion","useAuth","useSearchParams","jsxDEV","_jsxDEV","MessagesPage","_s","_selectedConversation2","user","searchParams","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","aiAnalysisLoading","setAiAnalysisLoading","showAiSuggestions","setShowAiSuggestions","aiSuggestions","setAiSuggestions","landAnalysisDialog","setLandAnalysisDialog","currentAnalysis","setCurrentAnalysis","enhancementData","setEnhancementData","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","messagesEndRef","actionMenuAnchor","setActionMenuAnchor","fetchConversations","agentId","get","propertyId","mockConversations","id","participant","username","first_name","last_name","user_role","company_name","avatar","property","title","price","location","last_message","content","sender_id","receiver_id","property_id","created_at","is_read","unread_count","length","fetchMessages","err","conversationId","mockMessages","handleSendMessage","trim","_selectedConversation","newMsg","Date","now","toISOString","prev","formatTime","dateString","toLocaleTimeString","hour","minute","hour12","formatDate","toLocaleDateString","month","day","getRoleColor","role","getRoleLabel","maxWidth","sx","py","children","fileName","_jsxFileName","lineNumber","columnNumber","mb","variant","component","gutterBottom","fontWeight","color","severity","onClose","container","spacing","height","item","xs","md","display","flexDirection","pb","flexGrow","overflow","map","conversation","_conversation$partici","button","selected","onClick","borderRadius","mx","backgroundColor","badgeContent","src","charAt","toUpperCase","primary","alignItems","gap","size","label","secondary","mt","fontSize","noWrap","borderBottom","borderColor","justifyContent","p","toLocaleString","message","div","initial","opacity","y","animate","transition","duration","textAlign","borderTop","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","endIcon","disabled","_c","$RefreshReg$"],"sources":["D:/py/frontend/src/pages/MessagesPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  Badge,\n  Alert,\n  Chip,\n  Paper,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Fab,\n  Menu,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  LinearProgress,\n  Switch,\n  FormControlLabel,\n  Tooltip,\n  Snackbar,\n} from '@mui/material';\nimport {\n  Send,\n  AttachFile,\n  MoreVert,\n  Person,\n  Business,\n  Home,\n  Analytics,\n  TrendingUp,\n  LocationOn,\n  Assessment,\n  SmartToy,\n  AutoAwesome,\n  ExpandMore,\n  Speed,\n  Security,\n  School,\n  Warning,\n  CheckCircle,\n  Info,\n} from '@mui/icons-material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSearchParams } from 'react-router-dom';\nimport { nvapiService, LandAnalysisResponse, ConversationContext, MessageEnhancement } from '../services/nvapiService';\n\ninterface Message {\n  id: number;\n  content: string;\n  sender_id: number;\n  receiver_id: number;\n  property_id?: number;\n  created_at: string;\n  is_read: boolean;\n  message_type?: 'inquiry' | 'response' | 'follow_up' | 'offer' | 'land_analysis' | 'deal_discussion';\n  ai_enhanced?: boolean;\n  land_analysis?: LandAnalysisResponse;\n  enhancement_data?: MessageEnhancement;\n}\n\ninterface Conversation {\n  id: number;\n  participant: {\n    id: number;\n    username: string;\n    first_name?: string;\n    last_name?: string;\n    user_role: string;\n    company_name?: string;\n    avatar?: string;\n  };\n  property?: {\n    id: number;\n    title: string;\n    price: number;\n    location: string;\n    type?: string;\n    sqft?: number;\n    bedrooms?: number;\n    bathrooms?: number;\n  };\n  last_message: Message;\n  unread_count: number;\n  deal_status?: 'inquiry' | 'negotiating' | 'offer_pending' | 'under_contract' | 'closed' | 'cancelled';\n  conversation_type?: 'general' | 'property_inquiry' | 'deal_discussion' | 'land_analysis';\n}\n\nconst MessagesPage: React.FC = () => {\n  const { user } = useAuth();\n  const [searchParams] = useSearchParams();\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [aiAnalysisLoading, setAiAnalysisLoading] = useState(false);\n  const [showAiSuggestions, setShowAiSuggestions] = useState(true);\n  const [aiSuggestions, setAiSuggestions] = useState<string[]>([]);\n  const [landAnalysisDialog, setLandAnalysisDialog] = useState(false);\n  const [currentAnalysis, setCurrentAnalysis] = useState<LandAnalysisResponse | null>(null);\n  const [enhancementData, setEnhancementData] = useState<MessageEnhancement | null>(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [actionMenuAnchor, setActionMenuAnchor] = useState<null | HTMLElement>(null);\n\n  useEffect(() => {\n    fetchConversations();\n    \n    // Check if we need to start a new conversation\n    const agentId = searchParams.get('agent');\n    const propertyId = searchParams.get('property');\n    if (agentId && propertyId) {\n      // TODO: Start new conversation with agent about property\n    }\n  }, [searchParams]);\n\n  const fetchConversations = async () => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      // Mock data for now\n      const mockConversations: Conversation[] = [\n        {\n          id: 1,\n          participant: {\n            id: 2,\n            username: 'sarah_agent',\n            first_name: 'Sarah',\n            last_name: 'Johnson',\n            user_role: 'seller_agent',\n            company_name: 'Premier Realty',\n            avatar: '/api/placeholder/40/40'\n          },\n          property: {\n            id: 1,\n            title: 'Beautiful 3BR Home in Naperville',\n            price: 425000,\n            location: 'Naperville, IL'\n          },\n          last_message: {\n            id: 1,\n            content: 'Hi! I saw your interest in the Naperville property. Would you like to schedule a viewing?',\n            sender_id: 2,\n            receiver_id: user?.id || 1,\n            property_id: 1,\n            created_at: '2024-01-15T14:30:00Z',\n            is_read: false\n          },\n          unread_count: 1\n        },\n        {\n          id: 2,\n          participant: {\n            id: 3,\n            username: 'mike_agent',\n            first_name: 'Mike',\n            last_name: 'Davis',\n            user_role: 'buyer_agent',\n            company_name: 'Urban Properties',\n            avatar: '/api/placeholder/40/40'\n          },\n          last_message: {\n            id: 2,\n            content: 'Thanks for the property details. My client is very interested.',\n            sender_id: user?.id || 1,\n            receiver_id: 3,\n            created_at: '2024-01-14T16:45:00Z',\n            is_read: true\n          },\n          unread_count: 0\n        }\n      ];\n      \n      setConversations(mockConversations);\n      if (mockConversations.length > 0) {\n        setSelectedConversation(mockConversations[0]);\n        fetchMessages(mockConversations[0].id);\n      }\n    } catch (err: any) {\n      setError('Failed to load conversations');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMessages = async (conversationId: number) => {\n    try {\n      // TODO: Replace with actual API call\n      // Mock messages for now\n      const mockMessages: Message[] = [\n        {\n          id: 1,\n          content: 'Hi! I saw your interest in the Naperville property. Would you like to schedule a viewing?',\n          sender_id: 2,\n          receiver_id: user?.id || 1,\n          property_id: 1,\n          created_at: '2024-01-15T14:30:00Z',\n          is_read: false\n        },\n        {\n          id: 2,\n          content: 'Yes, I\\'m very interested! When would be a good time?',\n          sender_id: user?.id || 1,\n          receiver_id: 2,\n          property_id: 1,\n          created_at: '2024-01-15T14:35:00Z',\n          is_read: true\n        },\n        {\n          id: 3,\n          content: 'How about this Saturday at 2 PM? I can meet you at the property.',\n          sender_id: 2,\n          receiver_id: user?.id || 1,\n          property_id: 1,\n          created_at: '2024-01-15T14:40:00Z',\n          is_read: false\n        }\n      ];\n      \n      setMessages(mockMessages);\n    } catch (err: any) {\n      setError('Failed to load messages');\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n\n    try {\n      // TODO: API call to send message\n      const newMsg: Message = {\n        id: Date.now(),\n        content: newMessage,\n        sender_id: user?.id || 1,\n        receiver_id: selectedConversation.participant.id,\n        property_id: selectedConversation.property?.id,\n        created_at: new Date().toISOString(),\n        is_read: false\n      };\n\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage('');\n    } catch (err: any) {\n      setError('Failed to send message');\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'primary';\n      case 'seller_agent':\n        return 'secondary';\n      case 'buyer':\n        return 'info';\n      case 'seller':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  const getRoleLabel = (role: string) => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'Buyer Agent';\n      case 'seller_agent':\n        return 'Seller Agent';\n      case 'buyer':\n        return 'Buyer';\n      case 'seller':\n        return 'Seller';\n      default:\n        return role;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n        <Typography>Loading messages...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          Messages\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Communicate with agents and clients\n        </Typography>\n      </Box>\n\n      {/* Error Alert */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Role-based Communication Rules */}\n      {user && (\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\n          {user.user_role === 'buyer' && \n            'As a buyer, you can contact seller agents directly. For other inquiries, work with your buyer agent.'}\n          {user.user_role === 'seller' && \n            'As a seller, you can contact buyer agents through your seller agent. Direct communication helps streamline the process.'}\n          {user.user_role === 'buyer_agent' && \n            'As a buyer agent, you can communicate with sellers and seller agents on behalf of your clients.'}\n          {user.user_role === 'seller_agent' && \n            'As a seller agent, you can communicate with buyers and buyer agents on behalf of your clients.'}\n        </Alert>\n      )}\n\n      <Grid container spacing={3} sx={{ height: 'calc(100vh - 300px)' }}>\n        {/* Conversations List */}\n        <Grid item xs={12} md={4}>\n          <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n            <CardContent sx={{ pb: 0 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Conversations\n              </Typography>\n            </CardContent>\n            <List sx={{ flexGrow: 1, overflow: 'auto' }}>\n              {conversations.map((conversation) => (\n                <ListItem\n                  key={conversation.id}\n                  button\n                  selected={selectedConversation?.id === conversation.id}\n                  onClick={() => {\n                    setSelectedConversation(conversation);\n                    fetchMessages(conversation.id);\n                  }}\n                  sx={{\n                    borderRadius: 1,\n                    mx: 1,\n                    mb: 1,\n                    '&.Mui-selected': {\n                      backgroundColor: 'primary.light',\n                      '&:hover': {\n                        backgroundColor: 'primary.light',\n                      },\n                    },\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Badge badgeContent={conversation.unread_count} color=\"error\">\n                      <Avatar src={conversation.participant.avatar}>\n                        {conversation.participant.first_name?.charAt(0) || \n                         conversation.participant.username.charAt(0).toUpperCase()}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"subtitle2\">\n                          {conversation.participant.first_name} {conversation.participant.last_name}\n                        </Typography>\n                        <Chip\n                          size=\"small\"\n                          label={getRoleLabel(conversation.participant.user_role)}\n                          color={getRoleColor(conversation.participant.user_role)}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        {conversation.participant.company_name && (\n                          <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n                            {conversation.participant.company_name}\n                          </Typography>\n                        )}\n                        {conversation.property && (\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mt: 0.5 }}>\n                            <Home fontSize=\"small\" color=\"action\" />\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              {conversation.property.title}\n                            </Typography>\n                          </Box>\n                        )}\n                        <Typography variant=\"body2\" sx={{ mt: 0.5 }} noWrap>\n                          {conversation.last_message.content}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {formatDate(conversation.last_message.created_at)}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Card>\n        </Grid>\n\n        {/* Messages Area */}\n        <Grid item xs={12} md={8}>\n          {selectedConversation ? (\n            <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n              {/* Chat Header */}\n              <CardContent sx={{ pb: 1, borderBottom: 1, borderColor: 'divider' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Avatar src={selectedConversation.participant.avatar}>\n                      {selectedConversation.participant.first_name?.charAt(0) || \n                       selectedConversation.participant.username.charAt(0).toUpperCase()}\n                    </Avatar>\n                    <Box>\n                      <Typography variant=\"h6\">\n                        {selectedConversation.participant.first_name} {selectedConversation.participant.last_name}\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Chip\n                          size=\"small\"\n                          label={getRoleLabel(selectedConversation.participant.user_role)}\n                          color={getRoleColor(selectedConversation.participant.user_role)}\n                          variant=\"outlined\"\n                        />\n                        {selectedConversation.participant.company_name && (\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            • {selectedConversation.participant.company_name}\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  </Box>\n                  <IconButton>\n                    <MoreVert />\n                  </IconButton>\n                </Box>\n                \n                {/* Property Info */}\n                {selectedConversation.property && (\n                  <Box sx={{ mt: 2, p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <Home color=\"primary\" />\n                      <Typography variant=\"subtitle2\">\n                        {selectedConversation.property.title}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      ${selectedConversation.property.price.toLocaleString()} • {selectedConversation.property.location}\n                    </Typography>\n                  </Box>\n                )}\n              </CardContent>\n\n              {/* Messages List */}\n              <Box sx={{ flexGrow: 1, overflow: 'auto', p: 2 }}>\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: message.sender_id === user?.id ? 'flex-end' : 'flex-start',\n                        mb: 2,\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          maxWidth: '70%',\n                          p: 2,\n                          borderRadius: 2,\n                          backgroundColor: message.sender_id === user?.id ? 'primary.main' : 'grey.100',\n                          color: message.sender_id === user?.id ? 'white' : 'text.primary',\n                        }}\n                      >\n                        <Typography variant=\"body1\">\n                          {message.content}\n                        </Typography>\n                        <Typography\n                          variant=\"caption\"\n                          sx={{\n                            display: 'block',\n                            mt: 0.5,\n                            opacity: 0.8,\n                            textAlign: 'right',\n                          }}\n                        >\n                          {formatTime(message.created_at)}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </motion.div>\n                ))}\n              </Box>\n\n              {/* Message Input */}\n              <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n                <Box sx={{ display: 'flex', gap: 1, alignItems: 'flex-end' }}>\n                  <TextField\n                    fullWidth\n                    multiline\n                    maxRows={3}\n                    placeholder=\"Type your message...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        handleSendMessage();\n                      }\n                    }}\n                  />\n                  <IconButton color=\"primary\">\n                    <AttachFile />\n                  </IconButton>\n                  <Button\n                    variant=\"contained\"\n                    endIcon={<Send />}\n                    onClick={handleSendMessage}\n                    disabled={!newMessage.trim()}\n                  >\n                    Send\n                  </Button>\n                </Box>\n              </Box>\n            </Card>\n          ) : (\n            <Card sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  Select a conversation to start messaging\n                </Typography>\n              </Box>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MessagesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}