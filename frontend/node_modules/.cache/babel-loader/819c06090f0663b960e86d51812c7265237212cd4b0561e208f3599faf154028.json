{"ast":null,"code":"import axios from'axios';// Create axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'/api/v1',headers:{'Content-Type':'application/json'}});// Add auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('access_token');window.location.href='/login';}return Promise.reject(error);});// Types\n// Auth API\nexport const authAPI={login:async(username,password)=>{const formData=new FormData();formData.append('username',username);formData.append('password',password);const response=await api.post('/auth/token',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},register:async registrationData=>{const response=await api.post('/auth/register',{email:registrationData.email,username:registrationData.username,password:registrationData.password,user_role:registrationData.user_role||'buyer',first_name:registrationData.first_name,last_name:registrationData.last_name,company_name:registrationData.company_name,license_number:registrationData.license_number});return response.data;},getCurrentUser:async()=>{const response=await api.get('/auth/me');return response.data;},updateProfile:async email=>{const response=await api.put('/auth/me',{email});return response.data;},changePassword:async(currentPassword,newPassword)=>{await api.post('/auth/change-password',{current_password:currentPassword,new_password:newPassword});}};// Analysis API\nexport const analysisAPI={analyze:async request=>{const response=await api.post('/analysis/analyze',request);return response.data;},quickAnalyze:async request=>{const response=await api.post('/analysis/quick-analyze',request);return response.data;},getHistory:async function(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;const response=await api.get('/analysis/history',{params:{skip,limit}});return response.data;},getAnalysis:async id=>{const response=await api.get(\"/analysis/analysis/\".concat(id));return response.data;},deleteAnalysis:async id=>{await api.delete(\"/analysis/analysis/\".concat(id));},compareLocations:async locationIds=>{const response=await api.get('/analysis/compare',{params:{location_ids:locationIds}});return response.data;},getRecommendations:async params=>{const response=await api.get('/analysis/recommendations',{params});return response.data;}};// Data Collection API\nexport const dataAPI={getDataStatus:async()=>{const response=await api.get('/data/status');return response.data;},triggerUpdate:async dataType=>{await api.post(\"/data/update-\".concat(dataType));},triggerFullUpdate:async()=>{await api.post('/data/update-all');},getUpdateLogs:async function(dataType){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const response=await api.get('/data/logs',{params:{data_type:dataType,limit}});return response.data;},validateAPIs:async()=>{const response=await api.post('/data/validate-apis');return response.data;},getStatistics:async()=>{const response=await api.get('/data/statistics');return response.data;},refreshLocationData:async locationId=>{await api.post(\"/data/location/\".concat(locationId,\"/refresh\"));}};// Utility functions\nexport const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount);};export const formatPercentage=value=>{return new Intl.NumberFormat('en-US',{style:'percent',minimumFractionDigits:1,maximumFractionDigits:1}).format(value);};export const formatDate=dateString=>{return new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'}).format(new Date(dateString));};export const getScoreColor=score=>{if(score>=80)return'#4caf50';// Green\nif(score>=60)return'#ff9800';// Orange\nif(score>=40)return'#f44336';// Red\nreturn'#9e9e9e';// Gray\n};export const getRecommendationColor=recommendation=>{switch(recommendation.toLowerCase()){case'buy':return'#4caf50';case'hold':return'#ff9800';case'avoid':return'#f44336';default:return'#9e9e9e';}};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}