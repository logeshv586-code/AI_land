{"ast":null,"code":"var _jsxFileName = \"D:\\\\py\\\\frontend\\\\src\\\\pages\\\\MessagesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Container, Grid, Card, CardContent, Typography, List, ListItem, ListItemAvatar, ListItemText, Avatar, TextField, Button, IconButton, Badge, Alert, Chip } from '@mui/material';\nimport { Send, AttachFile, MoreVert, Home } from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSearchParams } from 'react-router-dom';\nimport { nvapiService } from '../services/nvapiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesPage = () => {\n  _s();\n  var _selectedConversation6;\n  const {\n    user\n  } = useAuth();\n  const [searchParams] = useSearchParams();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [aiAnalysisLoading, setAiAnalysisLoading] = useState(false);\n  const [showAiSuggestions, setShowAiSuggestions] = useState(true);\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n  const [landAnalysisDialog, setLandAnalysisDialog] = useState(false);\n  const [currentAnalysis, setCurrentAnalysis] = useState(null);\n  const [enhancementData, setEnhancementData] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [actionMenuAnchor, setActionMenuAnchor] = useState(null);\n  useEffect(() => {\n    fetchConversations();\n\n    // Check if we need to start a new conversation\n    const agentId = searchParams.get('agent');\n    const propertyId = searchParams.get('property');\n    if (agentId && propertyId) {\n      // TODO: Start new conversation with agent about property\n    }\n  }, [searchParams]);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  useEffect(() => {\n    if (newMessage.trim()) {\n      handleMessageEnhancement(newMessage);\n    } else {\n      setEnhancementData(null);\n      setAiSuggestions([]);\n    }\n  }, [newMessage]);\n  const fetchConversations = async () => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      // Enhanced mock data with deal statuses and conversation types\n      const mockConversations = [{\n        id: 1,\n        participant: {\n          id: 2,\n          username: 'sarah_agent',\n          first_name: 'Sarah',\n          last_name: 'Johnson',\n          user_role: 'seller_agent',\n          company_name: 'Premier Realty',\n          avatar: '/api/placeholder/40/40'\n        },\n        property: {\n          id: 1,\n          title: 'Beautiful 3BR Home in Naperville',\n          price: 425000,\n          location: 'Naperville, IL',\n          type: 'Single Family',\n          sqft: 2200,\n          bedrooms: 3,\n          bathrooms: 2.5\n        },\n        last_message: {\n          id: 1,\n          content: 'Hi! I saw your interest in the Naperville property. Would you like me to run a comprehensive land analysis for this area?',\n          sender_id: 2,\n          receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n          property_id: 1,\n          created_at: '2024-01-15T14:30:00Z',\n          is_read: false,\n          message_type: 'inquiry',\n          ai_enhanced: true\n        },\n        unread_count: 1,\n        deal_status: 'inquiry',\n        conversation_type: 'property_inquiry'\n      }, {\n        id: 2,\n        participant: {\n          id: 3,\n          username: 'mike_agent',\n          first_name: 'Mike',\n          last_name: 'Davis',\n          user_role: 'buyer_agent',\n          company_name: 'Urban Properties',\n          avatar: '/api/placeholder/40/40'\n        },\n        property: {\n          id: 2,\n          title: 'Modern 4BR House in Schaumburg',\n          price: 465000,\n          location: 'Schaumburg, IL',\n          type: 'Single Family',\n          sqft: 2800,\n          bedrooms: 4,\n          bathrooms: 3\n        },\n        last_message: {\n          id: 2,\n          content: 'Thanks for the property details. My client is very interested. Can we discuss deal terms?',\n          sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n          receiver_id: 3,\n          created_at: '2024-01-14T16:45:00Z',\n          is_read: true,\n          message_type: 'deal_discussion'\n        },\n        unread_count: 0,\n        deal_status: 'negotiating',\n        conversation_type: 'deal_discussion'\n      }, {\n        id: 3,\n        participant: {\n          id: 4,\n          username: 'property_seller',\n          first_name: 'John',\n          last_name: 'Smith',\n          user_role: 'seller',\n          avatar: '/api/placeholder/40/40'\n        },\n        property: {\n          id: 3,\n          title: 'Investment Property in Chicago',\n          price: 320000,\n          location: 'Chicago, IL',\n          type: 'Condo',\n          sqft: 1200,\n          bedrooms: 2,\n          bathrooms: 2\n        },\n        last_message: {\n          id: 3,\n          content: 'I\\'m interested in your investment analysis for the Chicago market. Can you provide insights?',\n          sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n          receiver_id: 4,\n          created_at: '2024-01-13T10:20:00Z',\n          is_read: true,\n          message_type: 'land_analysis'\n        },\n        unread_count: 0,\n        deal_status: 'inquiry',\n        conversation_type: 'land_analysis'\n      }];\n      setConversations(mockConversations);\n      if (mockConversations.length > 0) {\n        setSelectedConversation(mockConversations[0]);\n        fetchMessages(mockConversations[0].id);\n      }\n    } catch (err) {\n      setError('Failed to load conversations');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchMessages = async conversationId => {\n    try {\n      // TODO: Replace with actual API call\n      // Enhanced mock messages with AI features\n      const mockMessages = [{\n        id: 1,\n        content: 'Hi! I saw your interest in the Naperville property. Would you like me to run a comprehensive land analysis for this area?',\n        sender_id: 2,\n        receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        property_id: 1,\n        created_at: '2024-01-15T14:30:00Z',\n        is_read: false,\n        message_type: 'inquiry',\n        ai_enhanced: true\n      }, {\n        id: 2,\n        content: 'Yes, I\\'m very interested! Please provide a detailed analysis including safety scores, market trends, and investment potential.',\n        sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        receiver_id: 2,\n        property_id: 1,\n        created_at: '2024-01-15T14:35:00Z',\n        is_read: true,\n        message_type: 'response'\n      }, {\n        id: 3,\n        content: 'Perfect! I\\'ve generated a comprehensive land analysis for Naperville. The overall score is 87.5/100 with excellent safety ratings and strong market appreciation trends.',\n        sender_id: 2,\n        receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        property_id: 1,\n        created_at: '2024-01-15T14:40:00Z',\n        is_read: false,\n        message_type: 'land_analysis',\n        ai_enhanced: true,\n        land_analysis: {\n          analysisId: 'analysis_1642255200000',\n          location: 'Naperville, IL',\n          overallScore: 87.5,\n          recommendation: 'buy',\n          confidenceLevel: 0.92,\n          keyFactors: [{\n            factor: 'Safety & Crime Rate',\n            score: 91.2,\n            impact: 'positive',\n            description: 'Extremely low crime rate with excellent police response'\n          }, {\n            factor: 'School Quality',\n            score: 95.8,\n            impact: 'positive',\n            description: 'Top-rated school district in the state'\n          }, {\n            factor: 'Market Trends',\n            score: 84.3,\n            impact: 'positive',\n            description: '8.2% price appreciation over past year'\n          }, {\n            factor: 'Transportation',\n            score: 82.7,\n            impact: 'positive',\n            description: 'Excellent highway and train access to Chicago'\n          }],\n          marketInsights: ['Naperville has shown 8.2% price appreciation over the past year', 'Inventory levels are 23% below historical averages, indicating strong demand', 'Average days on market decreased to 18 days, down from 32 days last year', 'New construction permits increased by 15%, suggesting growing neighborhood interest'],\n          riskFactors: ['Property taxes may increase due to rising assessed values', 'Traffic congestion during peak hours on main roads'],\n          opportunities: ['Upcoming transit expansion will improve connectivity', 'New shopping center development planned within 2 miles'],\n          predictedValueChange: {\n            oneYear: 6.8,\n            threeYear: 18.5,\n            fiveYear: 32.1\n          },\n          comparable_properties: [{\n            address: '1234 Maple Street',\n            price: 425000,\n            score: 87.5,\n            distance: 0.3\n          }, {\n            address: '5678 Oak Avenue',\n            price: 445000,\n            score: 91.2,\n            distance: 0.7\n          }]\n        }\n      }];\n      setMessages(mockMessages);\n    } catch (err) {\n      setError('Failed to load messages');\n    }\n  };\n  const handleMessageEnhancement = async message => {\n    if (!selectedConversation || !user) return;\n    try {\n      var _selectedConversation;\n      const context = {\n        propertyId: (_selectedConversation = selectedConversation.property) === null || _selectedConversation === void 0 ? void 0 : _selectedConversation.id,\n        userId: user.id,\n        userRole: user.user_role,\n        conversationHistory: messages.map(msg => ({\n          role: msg.sender_id === user.id ? 'user' : 'assistant',\n          content: msg.content,\n          timestamp: msg.created_at\n        })).slice(-5) // Last 5 messages for context\n      };\n      const enhancement = await nvapiService.enhanceMessage(message, context);\n      setEnhancementData(enhancement);\n      if (enhancement.suggestedResponses) {\n        setAiSuggestions(enhancement.suggestedResponses);\n      }\n    } catch (error) {\n      console.error('Error enhancing message:', error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n    try {\n      var _selectedConversation3;\n      setAiAnalysisLoading(true);\n\n      // Check if message should trigger land analysis\n      const shouldAnalyze = (enhancementData === null || enhancementData === void 0 ? void 0 : enhancementData.hasLandAnalysis) && /\\b(analysis|analyze|score|rating|investment|market)\\b/i.test(newMessage);\n      let landAnalysis;\n      if (shouldAnalyze && user) {\n        var _selectedConversation2;\n        const context = {\n          propertyId: (_selectedConversation2 = selectedConversation.property) === null || _selectedConversation2 === void 0 ? void 0 : _selectedConversation2.id,\n          userId: user.id,\n          userRole: user.user_role\n        };\n        landAnalysis = await nvapiService.generateLandAnalysisResponse(newMessage, context);\n        setCurrentAnalysis(landAnalysis);\n        setLandAnalysisDialog(true);\n      }\n\n      // Create new message\n      const newMsg = {\n        id: Date.now(),\n        content: newMessage,\n        sender_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n        receiver_id: selectedConversation.participant.id,\n        property_id: (_selectedConversation3 = selectedConversation.property) === null || _selectedConversation3 === void 0 ? void 0 : _selectedConversation3.id,\n        created_at: new Date().toISOString(),\n        is_read: false,\n        message_type: shouldAnalyze ? 'land_analysis' : 'response',\n        ai_enhanced: shouldAnalyze,\n        land_analysis: landAnalysis,\n        enhancement_data: enhancementData || undefined\n      };\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage('');\n      setEnhancementData(null);\n      setAiSuggestions([]);\n\n      // Generate AI response if appropriate\n      if (shouldAnalyze) {\n        setTimeout(async () => {\n          try {\n            var _selectedConversation4, _selectedConversation5;\n            const aiResponse = await nvapiService.generateConversationResponse(newMessage, {\n              propertyId: (_selectedConversation4 = selectedConversation.property) === null || _selectedConversation4 === void 0 ? void 0 : _selectedConversation4.id,\n              userId: selectedConversation.participant.id,\n              userRole: selectedConversation.participant.user_role\n            });\n            const aiMsg = {\n              id: Date.now() + 1,\n              content: aiResponse,\n              sender_id: selectedConversation.participant.id,\n              receiver_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n              property_id: (_selectedConversation5 = selectedConversation.property) === null || _selectedConversation5 === void 0 ? void 0 : _selectedConversation5.id,\n              created_at: new Date().toISOString(),\n              is_read: false,\n              message_type: 'response',\n              ai_enhanced: true\n            };\n            setMessages(prev => [...prev, aiMsg]);\n          } catch (error) {\n            console.error('Error generating AI response:', error);\n          }\n        }, 2000);\n      }\n      setSnackbarMessage('Message sent successfully!');\n      setSnackbarOpen(true);\n    } catch (err) {\n      setError('Failed to send message');\n    } finally {\n      setAiAnalysisLoading(false);\n    }\n  };\n  const handleSuggestedResponse = suggestion => {\n    setNewMessage(suggestion);\n    setAiSuggestions([]);\n  };\n  const handleRequestLandAnalysis = async () => {\n    if (!(selectedConversation !== null && selectedConversation !== void 0 && selectedConversation.property) || !user) return;\n    setAiAnalysisLoading(true);\n    try {\n      const context = {\n        propertyId: selectedConversation.property.id,\n        userId: user.id,\n        userRole: user.user_role\n      };\n      const analysis = await nvapiService.generateLandAnalysisResponse(`Please provide a comprehensive land analysis for ${selectedConversation.property.location}`, context);\n      setCurrentAnalysis(analysis);\n      setLandAnalysisDialog(true);\n    } catch (error) {\n      setError('Failed to generate land analysis');\n    } finally {\n      setAiAnalysisLoading(false);\n    }\n  };\n  const formatTime = dateString => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const getRoleColor = role => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'primary';\n      case 'seller_agent':\n        return 'secondary';\n      case 'buyer':\n        return 'info';\n      case 'seller':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  const getRoleLabel = role => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'Buyer Agent';\n      case 'seller_agent':\n        return 'Seller Agent';\n      case 'buyer':\n        return 'Buyer';\n      case 'seller':\n        return 'Seller';\n      default:\n        return role;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Communicate with agents and clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 3\n      },\n      children: [user.user_role === 'buyer' && 'As a buyer, you can contact seller agents directly. For other inquiries, work with your buyer agent.', user.user_role === 'seller' && 'As a seller, you can contact buyer agents through your seller agent. Direct communication helps streamline the process.', user.user_role === 'buyer_agent' && 'As a buyer agent, you can communicate with sellers and seller agents on behalf of your clients.', user.user_role === 'seller_agent' && 'As a seller agent, you can communicate with buyers and buyer agents on behalf of your clients.']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        height: 'calc(100vh - 300px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              pb: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto'\n            },\n            children: conversations.map(conversation => {\n              var _conversation$partici;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                selected: (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id,\n                onClick: () => {\n                  setSelectedConversation(conversation);\n                  fetchMessages(conversation.id);\n                },\n                sx: {\n                  borderRadius: 1,\n                  mx: 1,\n                  mb: 1,\n                  '&.Mui-selected': {\n                    backgroundColor: 'primary.light',\n                    '&:hover': {\n                      backgroundColor: 'primary.light'\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    badgeContent: conversation.unread_count,\n                    color: \"error\",\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      src: conversation.participant.avatar,\n                      children: ((_conversation$partici = conversation.participant.first_name) === null || _conversation$partici === void 0 ? void 0 : _conversation$partici.charAt(0)) || conversation.participant.username.charAt(0).toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: [conversation.participant.first_name, \" \", conversation.participant.last_name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: getRoleLabel(conversation.participant.user_role),\n                      color: getRoleColor(conversation.participant.user_role),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 23\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Box, {\n                    children: [conversation.participant.company_name && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: conversation.participant.company_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 27\n                    }, this), conversation.property && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 0.5,\n                        mt: 0.5\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Home, {\n                        fontSize: \"small\",\n                        color: \"action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        children: conversation.property.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        mt: 0.5\n                      },\n                      noWrap: true,\n                      children: conversation.last_message.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 650,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: formatDate(conversation.last_message.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 19\n                }, this)]\n              }, conversation.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              pb: 1,\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: selectedConversation.participant.avatar,\n                  children: ((_selectedConversation6 = selectedConversation.participant.first_name) === null || _selectedConversation6 === void 0 ? void 0 : _selectedConversation6.charAt(0)) || selectedConversation.participant.username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: [selectedConversation.participant.first_name, \" \", selectedConversation.participant.last_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: getRoleLabel(selectedConversation.participant.user_role),\n                      color: getRoleColor(selectedConversation.participant.user_role),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 682,\n                      columnNumber: 25\n                    }, this), selectedConversation.participant.company_name && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [\"\\u2022 \", selectedConversation.participant.company_name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), selectedConversation.property && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                p: 2,\n                backgroundColor: 'grey.50',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Home, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: selectedConversation.property.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"$\", selectedConversation.property.price.toLocaleString(), \" \\u2022 \", selectedConversation.property.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              p: 2\n            },\n            children: messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                duration: 0.2\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: message.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'flex-end' : 'flex-start',\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    maxWidth: '70%',\n                    p: 2,\n                    borderRadius: 2,\n                    backgroundColor: message.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'primary.main' : 'grey.100',\n                    color: message.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'white' : 'text.primary'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mt: 0.5,\n                      opacity: 0.8,\n                      textAlign: 'right'\n                    },\n                    children: formatTime(message.created_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 21\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                alignItems: 'flex-end'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                multiline: true,\n                maxRows: 3,\n                placeholder: \"Type your message...\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: e => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                endIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 30\n                }, this),\n                onClick: handleSendMessage,\n                disabled: !newMessage.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              children: \"Select a conversation to start messaging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 550,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesPage, \"fYIlJZpBw0JPABcbrXG/VAhdaB4=\", false, function () {\n  return [useAuth, useSearchParams];\n});\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Container","Grid","Card","CardContent","Typography","List","ListItem","ListItemAvatar","ListItemText","Avatar","TextField","Button","IconButton","Badge","Alert","Chip","Send","AttachFile","MoreVert","Home","motion","useAuth","useSearchParams","nvapiService","jsxDEV","_jsxDEV","MessagesPage","_s","_selectedConversation6","user","searchParams","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","aiAnalysisLoading","setAiAnalysisLoading","showAiSuggestions","setShowAiSuggestions","aiSuggestions","setAiSuggestions","landAnalysisDialog","setLandAnalysisDialog","currentAnalysis","setCurrentAnalysis","enhancementData","setEnhancementData","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","messagesEndRef","actionMenuAnchor","setActionMenuAnchor","fetchConversations","agentId","get","propertyId","current","scrollIntoView","behavior","trim","handleMessageEnhancement","mockConversations","id","participant","username","first_name","last_name","user_role","company_name","avatar","property","title","price","location","type","sqft","bedrooms","bathrooms","last_message","content","sender_id","receiver_id","property_id","created_at","is_read","message_type","ai_enhanced","unread_count","deal_status","conversation_type","length","fetchMessages","err","conversationId","mockMessages","land_analysis","analysisId","overallScore","recommendation","confidenceLevel","keyFactors","factor","score","impact","description","marketInsights","riskFactors","opportunities","predictedValueChange","oneYear","threeYear","fiveYear","comparable_properties","address","distance","message","_selectedConversation","context","userId","userRole","conversationHistory","map","msg","role","timestamp","slice","enhancement","enhanceMessage","suggestedResponses","console","handleSendMessage","_selectedConversation3","shouldAnalyze","hasLandAnalysis","test","landAnalysis","_selectedConversation2","generateLandAnalysisResponse","newMsg","Date","now","toISOString","enhancement_data","undefined","prev","setTimeout","_selectedConversation4","_selectedConversation5","aiResponse","generateConversationResponse","aiMsg","handleSuggestedResponse","suggestion","handleRequestLandAnalysis","analysis","formatTime","dateString","toLocaleTimeString","hour","minute","hour12","formatDate","toLocaleDateString","month","day","getRoleColor","getRoleLabel","maxWidth","sx","py","children","fileName","_jsxFileName","lineNumber","columnNumber","mb","variant","component","gutterBottom","fontWeight","color","severity","onClose","container","spacing","height","item","xs","md","display","flexDirection","pb","flexGrow","overflow","conversation","_conversation$partici","button","selected","onClick","borderRadius","mx","backgroundColor","badgeContent","src","charAt","toUpperCase","primary","alignItems","gap","size","label","secondary","mt","fontSize","noWrap","borderBottom","borderColor","justifyContent","p","toLocaleString","div","initial","opacity","y","animate","transition","duration","textAlign","borderTop","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","endIcon","disabled","_c","$RefreshReg$"],"sources":["D:/py/frontend/src/pages/MessagesPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  Badge,\n  Alert,\n  Chip,\n  Paper,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Fab,\n  Menu,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  LinearProgress,\n  Switch,\n  FormControlLabel,\n  Tooltip,\n  Snackbar,\n} from '@mui/material';\nimport {\n  Send,\n  AttachFile,\n  MoreVert,\n  Person,\n  Business,\n  Home,\n  Analytics,\n  TrendingUp,\n  LocationOn,\n  Assessment,\n  SmartToy,\n  AutoAwesome,\n  ExpandMore,\n  Speed,\n  Security,\n  School,\n  Warning,\n  CheckCircle,\n  Info,\n} from '@mui/icons-material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSearchParams } from 'react-router-dom';\nimport { nvapiService, LandAnalysisResponse, ConversationContext, MessageEnhancement } from '../services/nvapiService';\n\ninterface Message {\n  id: number;\n  content: string;\n  sender_id: number;\n  receiver_id: number;\n  property_id?: number;\n  created_at: string;\n  is_read: boolean;\n  message_type?: 'inquiry' | 'response' | 'follow_up' | 'offer' | 'land_analysis' | 'deal_discussion';\n  ai_enhanced?: boolean;\n  land_analysis?: LandAnalysisResponse;\n  enhancement_data?: MessageEnhancement;\n}\n\ninterface Conversation {\n  id: number;\n  participant: {\n    id: number;\n    username: string;\n    first_name?: string;\n    last_name?: string;\n    user_role: string;\n    company_name?: string;\n    avatar?: string;\n  };\n  property?: {\n    id: number;\n    title: string;\n    price: number;\n    location: string;\n    type?: string;\n    sqft?: number;\n    bedrooms?: number;\n    bathrooms?: number;\n  };\n  last_message: Message;\n  unread_count: number;\n  deal_status?: 'inquiry' | 'negotiating' | 'offer_pending' | 'under_contract' | 'closed' | 'cancelled';\n  conversation_type?: 'general' | 'property_inquiry' | 'deal_discussion' | 'land_analysis';\n}\n\nconst MessagesPage: React.FC = () => {\n  const { user } = useAuth();\n  const [searchParams] = useSearchParams();\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [aiAnalysisLoading, setAiAnalysisLoading] = useState(false);\n  const [showAiSuggestions, setShowAiSuggestions] = useState(true);\n  const [aiSuggestions, setAiSuggestions] = useState<string[]>([]);\n  const [landAnalysisDialog, setLandAnalysisDialog] = useState(false);\n  const [currentAnalysis, setCurrentAnalysis] = useState<LandAnalysisResponse | null>(null);\n  const [enhancementData, setEnhancementData] = useState<MessageEnhancement | null>(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [actionMenuAnchor, setActionMenuAnchor] = useState<null | HTMLElement>(null);\n\n  useEffect(() => {\n    fetchConversations();\n    \n    // Check if we need to start a new conversation\n    const agentId = searchParams.get('agent');\n    const propertyId = searchParams.get('property');\n    if (agentId && propertyId) {\n      // TODO: Start new conversation with agent about property\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (newMessage.trim()) {\n      handleMessageEnhancement(newMessage);\n    } else {\n      setEnhancementData(null);\n      setAiSuggestions([]);\n    }\n  }, [newMessage]);\n\n  const fetchConversations = async () => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      // Enhanced mock data with deal statuses and conversation types\n      const mockConversations: Conversation[] = [\n        {\n          id: 1,\n          participant: {\n            id: 2,\n            username: 'sarah_agent',\n            first_name: 'Sarah',\n            last_name: 'Johnson',\n            user_role: 'seller_agent',\n            company_name: 'Premier Realty',\n            avatar: '/api/placeholder/40/40'\n          },\n          property: {\n            id: 1,\n            title: 'Beautiful 3BR Home in Naperville',\n            price: 425000,\n            location: 'Naperville, IL',\n            type: 'Single Family',\n            sqft: 2200,\n            bedrooms: 3,\n            bathrooms: 2.5\n          },\n          last_message: {\n            id: 1,\n            content: 'Hi! I saw your interest in the Naperville property. Would you like me to run a comprehensive land analysis for this area?',\n            sender_id: 2,\n            receiver_id: user?.id || 1,\n            property_id: 1,\n            created_at: '2024-01-15T14:30:00Z',\n            is_read: false,\n            message_type: 'inquiry',\n            ai_enhanced: true\n          },\n          unread_count: 1,\n          deal_status: 'inquiry',\n          conversation_type: 'property_inquiry'\n        },\n        {\n          id: 2,\n          participant: {\n            id: 3,\n            username: 'mike_agent',\n            first_name: 'Mike',\n            last_name: 'Davis',\n            user_role: 'buyer_agent',\n            company_name: 'Urban Properties',\n            avatar: '/api/placeholder/40/40'\n          },\n          property: {\n            id: 2,\n            title: 'Modern 4BR House in Schaumburg',\n            price: 465000,\n            location: 'Schaumburg, IL',\n            type: 'Single Family',\n            sqft: 2800,\n            bedrooms: 4,\n            bathrooms: 3\n          },\n          last_message: {\n            id: 2,\n            content: 'Thanks for the property details. My client is very interested. Can we discuss deal terms?',\n            sender_id: user?.id || 1,\n            receiver_id: 3,\n            created_at: '2024-01-14T16:45:00Z',\n            is_read: true,\n            message_type: 'deal_discussion'\n          },\n          unread_count: 0,\n          deal_status: 'negotiating',\n          conversation_type: 'deal_discussion'\n        },\n        {\n          id: 3,\n          participant: {\n            id: 4,\n            username: 'property_seller',\n            first_name: 'John',\n            last_name: 'Smith',\n            user_role: 'seller',\n            avatar: '/api/placeholder/40/40'\n          },\n          property: {\n            id: 3,\n            title: 'Investment Property in Chicago',\n            price: 320000,\n            location: 'Chicago, IL',\n            type: 'Condo',\n            sqft: 1200,\n            bedrooms: 2,\n            bathrooms: 2\n          },\n          last_message: {\n            id: 3,\n            content: 'I\\'m interested in your investment analysis for the Chicago market. Can you provide insights?',\n            sender_id: user?.id || 1,\n            receiver_id: 4,\n            created_at: '2024-01-13T10:20:00Z',\n            is_read: true,\n            message_type: 'land_analysis'\n          },\n          unread_count: 0,\n          deal_status: 'inquiry',\n          conversation_type: 'land_analysis'\n        }\n      ];\n      \n      setConversations(mockConversations);\n      if (mockConversations.length > 0) {\n        setSelectedConversation(mockConversations[0]);\n        fetchMessages(mockConversations[0].id);\n      }\n    } catch (err: any) {\n      setError('Failed to load conversations');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMessages = async (conversationId: number) => {\n    try {\n      // TODO: Replace with actual API call\n      // Enhanced mock messages with AI features\n      const mockMessages: Message[] = [\n        {\n          id: 1,\n          content: 'Hi! I saw your interest in the Naperville property. Would you like me to run a comprehensive land analysis for this area?',\n          sender_id: 2,\n          receiver_id: user?.id || 1,\n          property_id: 1,\n          created_at: '2024-01-15T14:30:00Z',\n          is_read: false,\n          message_type: 'inquiry',\n          ai_enhanced: true\n        },\n        {\n          id: 2,\n          content: 'Yes, I\\'m very interested! Please provide a detailed analysis including safety scores, market trends, and investment potential.',\n          sender_id: user?.id || 1,\n          receiver_id: 2,\n          property_id: 1,\n          created_at: '2024-01-15T14:35:00Z',\n          is_read: true,\n          message_type: 'response'\n        },\n        {\n          id: 3,\n          content: 'Perfect! I\\'ve generated a comprehensive land analysis for Naperville. The overall score is 87.5/100 with excellent safety ratings and strong market appreciation trends.',\n          sender_id: 2,\n          receiver_id: user?.id || 1,\n          property_id: 1,\n          created_at: '2024-01-15T14:40:00Z',\n          is_read: false,\n          message_type: 'land_analysis',\n          ai_enhanced: true,\n          land_analysis: {\n            analysisId: 'analysis_1642255200000',\n            location: 'Naperville, IL',\n            overallScore: 87.5,\n            recommendation: 'buy',\n            confidenceLevel: 0.92,\n            keyFactors: [\n              { factor: 'Safety & Crime Rate', score: 91.2, impact: 'positive', description: 'Extremely low crime rate with excellent police response' },\n              { factor: 'School Quality', score: 95.8, impact: 'positive', description: 'Top-rated school district in the state' },\n              { factor: 'Market Trends', score: 84.3, impact: 'positive', description: '8.2% price appreciation over past year' },\n              { factor: 'Transportation', score: 82.7, impact: 'positive', description: 'Excellent highway and train access to Chicago' }\n            ],\n            marketInsights: [\n              'Naperville has shown 8.2% price appreciation over the past year',\n              'Inventory levels are 23% below historical averages, indicating strong demand',\n              'Average days on market decreased to 18 days, down from 32 days last year',\n              'New construction permits increased by 15%, suggesting growing neighborhood interest'\n            ],\n            riskFactors: [\n              'Property taxes may increase due to rising assessed values',\n              'Traffic congestion during peak hours on main roads'\n            ],\n            opportunities: [\n              'Upcoming transit expansion will improve connectivity',\n              'New shopping center development planned within 2 miles'\n            ],\n            predictedValueChange: {\n              oneYear: 6.8,\n              threeYear: 18.5,\n              fiveYear: 32.1\n            },\n            comparable_properties: [\n              { address: '1234 Maple Street', price: 425000, score: 87.5, distance: 0.3 },\n              { address: '5678 Oak Avenue', price: 445000, score: 91.2, distance: 0.7 }\n            ]\n          }\n        }\n      ];\n      \n      setMessages(mockMessages);\n    } catch (err: any) {\n      setError('Failed to load messages');\n    }\n  };\n\n  const handleMessageEnhancement = async (message: string) => {\n    if (!selectedConversation || !user) return;\n    \n    try {\n      const context: ConversationContext = {\n        propertyId: selectedConversation.property?.id,\n        userId: user.id,\n        userRole: user.user_role,\n        conversationHistory: messages.map(msg => ({\n          role: msg.sender_id === user.id ? 'user' : 'assistant',\n          content: msg.content,\n          timestamp: msg.created_at\n        })).slice(-5) // Last 5 messages for context\n      };\n      \n      const enhancement = await nvapiService.enhanceMessage(message, context);\n      setEnhancementData(enhancement);\n      \n      if (enhancement.suggestedResponses) {\n        setAiSuggestions(enhancement.suggestedResponses);\n      }\n    } catch (error) {\n      console.error('Error enhancing message:', error);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n\n    try {\n      setAiAnalysisLoading(true);\n      \n      // Check if message should trigger land analysis\n      const shouldAnalyze = enhancementData?.hasLandAnalysis && \n        /\\b(analysis|analyze|score|rating|investment|market)\\b/i.test(newMessage);\n      \n      let landAnalysis: LandAnalysisResponse | undefined;\n      \n      if (shouldAnalyze && user) {\n        const context: ConversationContext = {\n          propertyId: selectedConversation.property?.id,\n          userId: user.id,\n          userRole: user.user_role\n        };\n        \n        landAnalysis = await nvapiService.generateLandAnalysisResponse(newMessage, context);\n        setCurrentAnalysis(landAnalysis);\n        setLandAnalysisDialog(true);\n      }\n      \n      // Create new message\n      const newMsg: Message = {\n        id: Date.now(),\n        content: newMessage,\n        sender_id: user?.id || 1,\n        receiver_id: selectedConversation.participant.id,\n        property_id: selectedConversation.property?.id,\n        created_at: new Date().toISOString(),\n        is_read: false,\n        message_type: shouldAnalyze ? 'land_analysis' : 'response',\n        ai_enhanced: shouldAnalyze,\n        land_analysis: landAnalysis,\n        enhancement_data: enhancementData || undefined\n      };\n\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage('');\n      setEnhancementData(null);\n      setAiSuggestions([]);\n      \n      // Generate AI response if appropriate\n      if (shouldAnalyze) {\n        setTimeout(async () => {\n          try {\n            const aiResponse = await nvapiService.generateConversationResponse(\n              newMessage, \n              { \n                propertyId: selectedConversation.property?.id,\n                userId: selectedConversation.participant.id,\n                userRole: selectedConversation.participant.user_role as any\n              }\n            );\n            \n            const aiMsg: Message = {\n              id: Date.now() + 1,\n              content: aiResponse,\n              sender_id: selectedConversation.participant.id,\n              receiver_id: user?.id || 1,\n              property_id: selectedConversation.property?.id,\n              created_at: new Date().toISOString(),\n              is_read: false,\n              message_type: 'response',\n              ai_enhanced: true\n            };\n            \n            setMessages(prev => [...prev, aiMsg]);\n          } catch (error) {\n            console.error('Error generating AI response:', error);\n          }\n        }, 2000);\n      }\n      \n      setSnackbarMessage('Message sent successfully!');\n      setSnackbarOpen(true);\n    } catch (err: any) {\n      setError('Failed to send message');\n    } finally {\n      setAiAnalysisLoading(false);\n    }\n  };\n\n  const handleSuggestedResponse = (suggestion: string) => {\n    setNewMessage(suggestion);\n    setAiSuggestions([]);\n  };\n\n  const handleRequestLandAnalysis = async () => {\n    if (!selectedConversation?.property || !user) return;\n    \n    setAiAnalysisLoading(true);\n    try {\n      const context: ConversationContext = {\n        propertyId: selectedConversation.property.id,\n        userId: user.id,\n        userRole: user.user_role\n      };\n      \n      const analysis = await nvapiService.generateLandAnalysisResponse(\n        `Please provide a comprehensive land analysis for ${selectedConversation.property.location}`,\n        context\n      );\n      \n      setCurrentAnalysis(analysis);\n      setLandAnalysisDialog(true);\n    } catch (error) {\n      setError('Failed to generate land analysis');\n    } finally {\n      setAiAnalysisLoading(false);\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'primary';\n      case 'seller_agent':\n        return 'secondary';\n      case 'buyer':\n        return 'info';\n      case 'seller':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  const getRoleLabel = (role: string) => {\n    switch (role) {\n      case 'buyer_agent':\n        return 'Buyer Agent';\n      case 'seller_agent':\n        return 'Seller Agent';\n      case 'buyer':\n        return 'Buyer';\n      case 'seller':\n        return 'Seller';\n      default:\n        return role;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n        <Typography>Loading messages...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          Messages\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Communicate with agents and clients\n        </Typography>\n      </Box>\n\n      {/* Error Alert */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Role-based Communication Rules */}\n      {user && (\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\n          {user.user_role === 'buyer' && \n            'As a buyer, you can contact seller agents directly. For other inquiries, work with your buyer agent.'}\n          {user.user_role === 'seller' && \n            'As a seller, you can contact buyer agents through your seller agent. Direct communication helps streamline the process.'}\n          {user.user_role === 'buyer_agent' && \n            'As a buyer agent, you can communicate with sellers and seller agents on behalf of your clients.'}\n          {user.user_role === 'seller_agent' && \n            'As a seller agent, you can communicate with buyers and buyer agents on behalf of your clients.'}\n        </Alert>\n      )}\n\n      <Grid container spacing={3} sx={{ height: 'calc(100vh - 300px)' }}>\n        {/* Conversations List */}\n        <Grid item xs={12} md={4}>\n          <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n            <CardContent sx={{ pb: 0 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Conversations\n              </Typography>\n            </CardContent>\n            <List sx={{ flexGrow: 1, overflow: 'auto' }}>\n              {conversations.map((conversation) => (\n                <ListItem\n                  key={conversation.id}\n                  button\n                  selected={selectedConversation?.id === conversation.id}\n                  onClick={() => {\n                    setSelectedConversation(conversation);\n                    fetchMessages(conversation.id);\n                  }}\n                  sx={{\n                    borderRadius: 1,\n                    mx: 1,\n                    mb: 1,\n                    '&.Mui-selected': {\n                      backgroundColor: 'primary.light',\n                      '&:hover': {\n                        backgroundColor: 'primary.light',\n                      },\n                    },\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Badge badgeContent={conversation.unread_count} color=\"error\">\n                      <Avatar src={conversation.participant.avatar}>\n                        {conversation.participant.first_name?.charAt(0) || \n                         conversation.participant.username.charAt(0).toUpperCase()}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"subtitle2\">\n                          {conversation.participant.first_name} {conversation.participant.last_name}\n                        </Typography>\n                        <Chip\n                          size=\"small\"\n                          label={getRoleLabel(conversation.participant.user_role)}\n                          color={getRoleColor(conversation.participant.user_role)}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        {conversation.participant.company_name && (\n                          <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n                            {conversation.participant.company_name}\n                          </Typography>\n                        )}\n                        {conversation.property && (\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mt: 0.5 }}>\n                            <Home fontSize=\"small\" color=\"action\" />\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              {conversation.property.title}\n                            </Typography>\n                          </Box>\n                        )}\n                        <Typography variant=\"body2\" sx={{ mt: 0.5 }} noWrap>\n                          {conversation.last_message.content}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {formatDate(conversation.last_message.created_at)}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Card>\n        </Grid>\n\n        {/* Messages Area */}\n        <Grid item xs={12} md={8}>\n          {selectedConversation ? (\n            <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n              {/* Chat Header */}\n              <CardContent sx={{ pb: 1, borderBottom: 1, borderColor: 'divider' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Avatar src={selectedConversation.participant.avatar}>\n                      {selectedConversation.participant.first_name?.charAt(0) || \n                       selectedConversation.participant.username.charAt(0).toUpperCase()}\n                    </Avatar>\n                    <Box>\n                      <Typography variant=\"h6\">\n                        {selectedConversation.participant.first_name} {selectedConversation.participant.last_name}\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Chip\n                          size=\"small\"\n                          label={getRoleLabel(selectedConversation.participant.user_role)}\n                          color={getRoleColor(selectedConversation.participant.user_role)}\n                          variant=\"outlined\"\n                        />\n                        {selectedConversation.participant.company_name && (\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            • {selectedConversation.participant.company_name}\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  </Box>\n                  <IconButton>\n                    <MoreVert />\n                  </IconButton>\n                </Box>\n                \n                {/* Property Info */}\n                {selectedConversation.property && (\n                  <Box sx={{ mt: 2, p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <Home color=\"primary\" />\n                      <Typography variant=\"subtitle2\">\n                        {selectedConversation.property.title}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      ${selectedConversation.property.price.toLocaleString()} • {selectedConversation.property.location}\n                    </Typography>\n                  </Box>\n                )}\n              </CardContent>\n\n              {/* Messages List */}\n              <Box sx={{ flexGrow: 1, overflow: 'auto', p: 2 }}>\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: message.sender_id === user?.id ? 'flex-end' : 'flex-start',\n                        mb: 2,\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          maxWidth: '70%',\n                          p: 2,\n                          borderRadius: 2,\n                          backgroundColor: message.sender_id === user?.id ? 'primary.main' : 'grey.100',\n                          color: message.sender_id === user?.id ? 'white' : 'text.primary',\n                        }}\n                      >\n                        <Typography variant=\"body1\">\n                          {message.content}\n                        </Typography>\n                        <Typography\n                          variant=\"caption\"\n                          sx={{\n                            display: 'block',\n                            mt: 0.5,\n                            opacity: 0.8,\n                            textAlign: 'right',\n                          }}\n                        >\n                          {formatTime(message.created_at)}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </motion.div>\n                ))}\n              </Box>\n\n              {/* Message Input */}\n              <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n                <Box sx={{ display: 'flex', gap: 1, alignItems: 'flex-end' }}>\n                  <TextField\n                    fullWidth\n                    multiline\n                    maxRows={3}\n                    placeholder=\"Type your message...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        handleSendMessage();\n                      }\n                    }}\n                  />\n                  <IconButton color=\"primary\">\n                    <AttachFile />\n                  </IconButton>\n                  <Button\n                    variant=\"contained\"\n                    endIcon={<Send />}\n                    onClick={handleSendMessage}\n                    disabled={!newMessage.trim()}\n                  >\n                    Send\n                  </Button>\n                </Box>\n              </Box>\n            </Card>\n          ) : (\n            <Card sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  Select a conversation to start messaging\n                </Typography>\n              </Box>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MessagesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}